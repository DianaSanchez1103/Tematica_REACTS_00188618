{"version":3,"sources":["index.js"],"names":["counterId","Dato","id","carnet","schedule","late","this","_id","_carnet","_schedule","_late","List","Object","keys","map","key","index","substring","datos","onClick","props","onDelete","renderHeader","renderBody","React","Component","Form","state","handleInputChange","bind","handleSubmit","event","preventDefault","dato","onSave","target","value","type","checked","setState","name","placeholder","htmlFor","onChange","param","action","onSubmit","renderInput","for","class","data-submit","App","err","slice","find","current","push","filter","ele","className","saveStudent","deleteStudent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4130e47.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nvar counterId = 0;\n\nclass Dato {\n    constructor(id, carnet, schedule, late) {\n        this._id = id;\n        this._carnet = carnet;\n        this._schedule = schedule;\n        this._late = late;\n    }\n\n    get id() { return this._id }\n    get carnet() { return this._carnet }\n    get schedule() { return this._schedule }\n    get late() { return this._late}\n\n    // Hacen falta las validaciones antes de la asignación\n    set id(counterId) { this._id = counterId }\n    set carnet(carnet) { this._carnet = carnet }\n    set schedule(schedule) { this._schedule = schedule }\n    set late(late) { this._late = late }\n}\n\nclass List extends React.Component {\n\n    renderHeader() {\n        return Object.keys(new Dato()).map((key, index) => {\n            return (\n                <th key={index}>\n                    {key.substring(1)}\n                </th>\n            );\n        });\n    }\n\n    renderBody(datos) {\n        return datos.map(({id, carnet, schedule, late }) => {\n            return (\n                <tr key={id}>\n                    <td>{id}</td>\n                    <td>{carnet}</td>\n                    <td>{schedule}</td>\n                    <td>{late}</td>\n                    <td>\n                        <button  onClick={() => {this.props.onDelete(carnet)}}>Delete</button>\n                    </td>\n                </tr>\n            );\n        });\n      \n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            {this.renderHeader()}\n                            <th> actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                         {this.renderBody(this.props.datos)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass Form extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {id:counterId, carnet: '', schedule: '', late: ''};\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        counterId++;\n    }\n\n    // Manejador del evento de submit, ejecuta la funcion saveStudent\n    // Pasada por props\n    handleSubmit(event) {\n        event.preventDefault();\n        // Se necesitan validaciones de entrada\n        let dato = new Dato(this.state.id,this.state.carnet, this.state.schedule, this.state.late);\n        this.props.onSave(dato);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const carnet = target.carnet;\n\n        this.setState({\n            [carnet]: value\n        });\n    }\n\n    // Label + input\n    // TODO: Necesita se modificado para funcionar con todos los tipos de entrada\n    renderInput(name,placeholder, type = \"text\") {\n        return (\n            /* Se un fragmento React, para establecer que este código se hijo directo en el resultado */\n            <fieldset>\n                <label htmlFor={name}>{name}</label>\n                <input\n                    type={type}\n                    name={name} id={name}\n                    value={this.state[name]}\n                    placeholder= {placeholder}\n                    onChange={this.handleInputChange} />\n            </fieldset>\n        );\n    }\n\n    renderSwitch(param) {\n        switch(param) {\n          case 'Tarde':\n            return 'Tarde';\n          default:\n            return 'Temprano';\n        }\n      }\n\n    render() {\n        return (\n            <form id=\"contact\" action=\"\" onSubmit={this.handleSubmit}>\n                <h3>Student Form</h3>\n                {this.renderInput(\"carnet\",\"00031111\")}\n                <label for=\"schedule\">Seleccione el horario:</label>\n                    <select name=\"schedule\" class=\"form-control\" id=\"schedule_field\">\n                        <option>Lunes de 9:00 a 11.00</option>\n                        <option>Martes de 13:30 a 15:30</option>\n                        <option>Miércoles de 9:00 a 11.00</option>\n                        <option>Jueves de 13:30 a 15:30</option>\n                        <option>Viernes de 9:00 a 11.00</option>\n                        <option>Viernes de 15:30 a 17:30</option>\n                    </select>\n                    <div class=\"custom-control custom-switch\">\n                        <input\n                        type=\"checkbox\"\n                        class=\"custom-control-input\"\n                        id=\"late_switch\"\n                        />\n                        <label class=\"custom-control-label\" for=\"late_switch\"\n                        >Llegó tarde?</label>\n                    </div>\n                <fieldset>\n                    <button name=\"submit\" type=\"submit\" id=\"contact-submit\" data-submit=\"...Sending\">Submit</button>\n                </fieldset>\n            </form>\n        );\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            datos: [],\n            err: ''\n        }\n    }\n\n    saveStudent(dato) {\n        const datos = this.state.datos.slice();\n        if (!datos.find((current) => {\n            return current.carnet === dato.carnet;\n        })) {\n            datos.push(dato);\n            counterId++;\n            this.setState({ datos, err: '' });\n        } else {\n            this.setState({ err: \"El estudiante ya existe\" })\n        }\n\n    }\n\n    deleteStudent(id) {\n        const datos = this.state.datos.filter(function (ele) {\n            return ele.id !== id;\n        });\n        this.setState({ datos });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div>{this.state.err}</div>\n                    <Form onSave={(dato) => {\n                        this.saveStudent(dato)\n                    }} />\n                </div>\n                <List datos={this.state.datos} onDelete={(id) => {\n                    this.deleteStudent(id);\n                }} />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}